version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      #KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
  db:
    image: postgres:14.1-alpine
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
#  postgres-connector:
#    image: debezium/connect:1.6
#    container_name: postgres-debezium
#    ports:
#      - 9090:8083
#    links:
#      - kafka
#    depends_on:
#      - kafka
#      - db
#    environment:
#      - BOOTSTRAP_SERVERS=kafka:9092
#      - GROUP_ID=pg
#      - CONFIG_STORAGE_TOPIC=pg_connect_configs
#      - OFFSET_STORAGE_TOPIC=pg_connect_offsets
#      - STATUS_STORAGE_TOPIC=pg_connect_statuses
volumes:
  db:
    driver: local
networks:
  broker-kafka:
    driver: bridge